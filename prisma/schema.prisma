// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Quiz {
  id                 String               @id @default(cuid())
  title              String
  date               DateTime             @default(now())
  questions          Question[]           @relation("QuizToQuestions")
  UserQuizStatistics UserQuizStatistics[]
}

model Question {
  id            Int     @unique @default(autoincrement())
  question      String
  quizId        String
  questionKey   String
  answer        String
  questionState String?
  quiz          Quiz    @relation("QuizToQuestions", fields: [quizId], references: [id])
}

model UserQuizStatistics {
  id        String   @id @default(cuid())
  userId    String
  quizId    String
  quizName  String
  isSolved  Boolean
  score     Int
  total     Int
  answers   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  quiz Quiz @relation(fields: [quizId], references: [id])

  @@unique([userId, quizId])
}

model User {
  id                 String               @id @default(cuid())
  userName           String
  userPoint          Int
  date               DateTime             @default(now())
  UserQuizStatistics UserQuizStatistics[]
}

model GroupChallengeRoom {
  id         String   @id @default(cuid())
  roomCode   String   @unique
  hostUserId String
  quizId     String
  status     String   @default("waiting") //'waiting' | 'playing' | 'finish'
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  participants GroupParticipant[]
}

model GroupParticipant {
  id               String    @id @default(cuid())
  userId           String
  groupChallengeId String
  userName         String?
  ready            Boolean
  finished         Boolean
  score            Int       @default(0)
  answers          Json?
  startTime        DateTime?
  endTime          DateTime?

  groupChallenge GroupChallengeRoom @relation(fields: [groupChallengeId], references: [roomCode])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
