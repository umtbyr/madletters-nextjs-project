import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Navbar } from "@/components/Navbar";
import { Toaster } from "react-hot-toast";
import { ClientToast } from "@/components/ClientToast";
import "./globals.css";
import { cookies } from "next/headers";
import { prisma } from "@/lib/prisma";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const userId = (await cookies()).get("userId")?.value;
  const userName = `Kullanıcı${Math.floor(1000 + Math.random() * 9000)}`;
  const dbUser = await prisma.user.upsert({
    where: { id: userId },
    update: {},
    create: {
      userPoint: 0,
      id: userId,
      userName: userName,
    },
  });

  const finalUserName = dbUser.userName;

  return (
    <html lang="en" className="w-full h-full overflow-x-hidden">
      <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} overflow-x-hidden antialiased w-full h-full`}
      >
        <Toaster position="top-center" reverseOrder={true} />
        <ClientToast name={finalUserName} />
        <header className="w-full">
          <Navbar />
        </header>
        {children}
      </body>
    </html>
  );
}
